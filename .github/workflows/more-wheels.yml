name: Build long-running wheels
on: push
jobs:
  wheels-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64]
        image: [manylinux, musllinux]
    steps:
    - uses: actions/checkout@v3
    - name: Unpack QuantLib and QuantLib-SWIG
      run: |
        tar xfz QuantLib-1.*.tar.gz
        tar xfz QuantLib-SWIG-1.*.tar.gz
    - name: Set up QEMU
      if: matrix.arch == 'aarch64'
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64
    - name: Build QuantLib wheels
      uses: pypa/cibuildwheel@v2.14
      env:
        CIBW_BUILD: "*-${{ matrix.image }}*"
        CIBW_SKIP: cp36-*
        CIBW_ARCHS_LINUX: ${{ matrix.arch }}
        CIBW_BUILD_VERBOSITY: 2
        CIBW_BEFORE_ALL_LINUX: ./before_all_linux.sh
        CIBW_ENVIRONMENT_LINUX: CXXFLAGS=${{ matrix.arch == 'x86_64' && '"-O3 -g0"' || matrix.arch == 'i686' && '"-O1 -g0"' || '"-O0 -g0"' }} CXXQLFLAGS=${{ matrix.arch == 'aarch64' && '"-O2 -g0"' || '"-O3 -g0"' }}
        CIBW_ENVIRONMENT_PASS_LINUX: CXXFLAGS CXXQLFLAGS
        CIBW_TEST_COMMAND: python {package}/test/QuantLibTestSuite.py
      with:
        package-dir: ./QuantLib-SWIG-1.31.1/Python
    - name: Save wheels as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wheels-linux-${{ matrix.image }}-${{ matrix.arch }}
        path: ./wheelhouse/*.whl
  test-publish:
    runs-on: ubuntu-latest
    needs: [ wheels-linux ]
    environment: testpypi
    permissions:
      id-token: write
    steps:
    - uses: actions/download-artifact@v3
    - name: Collect wheels
      run: |
        mkdir ./wheelhouse
        cp ./wheels-*/*.whl ./wheelhouse
        ls -l ./wheelhouse
    - name: Publish package to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        packages-dir: ./wheelhouse
        skip-existing: true
  publish:
    runs-on: ubuntu-latest
    needs: test-publish
    environment: pypi
    permissions:
      id-token: write
    steps:
    - uses: actions/download-artifact@v3
    - name: Collect wheels
      run: |
        mkdir ./wheelhouse
        cp ./wheels-*/*.whl ./wheelhouse
        ls -l ./wheelhouse
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: ./wheelhouse
        skip-existing: true

name: Build wheels
on: push
jobs:
  wheels-macos:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14]
        include:
          - os: macos-13
            moreflags: -mmacosx-version-min=10.13
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup
      run: |
        brew install boost
    - name: Build QuantLib
      run: |
        tar xfz QuantLib-1.*.tar.gz
        cd QuantLib-1.*/
        ./configure --disable-shared --with-boost-include=`brew --prefix`/include --enable-unity-build --disable-test-suite --enable-skip-examples
        make -j3 CXXFLAGS="-std=c++17 -g0 -O3 ${{ matrix.moreflags }} -fno-common -dynamic -DNDEBUG -fwrapv" LDFLAGS="-fno-common -dynamic -DNDEBUG -fwrapv"
        sudo make install
    - name: Unpack QuantLib-SWIG
      run: |
        tar xfz QuantLib-SWIG-1.*.tar.gz
    - name: Build QuantLib wheels
      uses: pypa/cibuildwheel@v3.2.1
      env:
        CIBW_ENABLE: pypy
        CIBW_SKIP: cp31?t-*
        CXXFLAGS: -std=c++17 -g0 -O3 ${{ matrix.moreflags }}
        MACOSX_DEPLOYMENT_TARGET: 10.13
        CIBW_BUILD_VERBOSITY: 2
        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_COMMAND: pytest {package}/test
      with:
        package-dir: ./QuantLib-SWIG-1.40/Python
    - name: Save wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}
        path: ./wheelhouse/*.whl
  wheels-windows:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: AMD64
            platform: x64
          - arch: x86
            platform: Win32
    steps:
    - uses: actions/checkout@v4
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
    - name: Setup Boost
      run: |
        $Url = "https://archives.boost.io/release/1.89.0/source/boost_1_89_0.zip"
        (New-Object System.Net.WebClient).DownloadFile($Url, "$RUNNER_TEMP\boost.zip")
        Expand-Archive -Path "$RUNNER_TEMP\boost.zip" -DestinationPath C:\local
        Rename-Item -Path "C:\local\boost_1_89_0" -NewName "boost"
    - name: Build QuantLib
      run: |
        Expand-Archive -Path QuantLib-1.40.zip -DestinationPath C:\local
        Copy-Item Build.props C:\local\QuantLib-1.40\
        Copy-Item Directory.Build.props C:\local\QuantLib-1.40\
        cd C:\local\QuantLib-1.40\
        msbuild QuantLib.vcxproj -p:Configuration="Release (static runtime)" -p:Platform=${{ matrix.platform }}
        dir lib
    - name: Unpack QuantLib-SWIG
      run: |
        Expand-Archive -Path QuantLib-SWIG-1.40.zip -DestinationPath .
    - name: Build QuantLib wheels
      uses: pypa/cibuildwheel@v3.2.1
      env:
        QL_DIR: C:\local\QuantLib-1.40
        INCLUDE: C:\local\boost
        QL_STATIC_RUNTIME: 1
        CIBW_ENABLE: pypy
        CIBW_SKIP: cp31?t-*
        CIBW_ARCHS_WINDOWS: ${{ matrix.arch }}
        CIBW_BUILD_VERBOSITY: 2
        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_COMMAND: pytest {package}/test
      with:
        package-dir: ./QuantLib-SWIG-1.40/Python
    - name: Save wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-windows-${{ matrix.arch }}
        path: ./wheelhouse/*.whl
  wheels-linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            image: manylinux
            os: ubuntu-24.04
          - arch: x86_64
            image: musllinux
            os: ubuntu-24.04
          - arch: i686
            image: manylinux
            os: ubuntu-24.04
          - arch: i686
            image: musllinux
            os: ubuntu-24.04
          - arch: aarch64
            image: manylinux
            os: ubuntu-24.04-arm
          - arch: aarch64
            image: musllinux
            os: ubuntu-24.04-arm
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Unpack QuantLib and QuantLib-SWIG
      run: |
        tar xfz QuantLib-1.*.tar.gz
        tar xfz QuantLib-SWIG-1.*.tar.gz
    - name: Build QuantLib wheels
      uses: pypa/cibuildwheel@v3.2.1
      env:
        CIBW_BUILD: "*-${{ matrix.image }}*"
        CIBW_ENABLE: pypy
        CIBW_SKIP: cp31?t-*
        CIBW_ARCHS_LINUX: ${{ matrix.arch }}
        CIBW_BUILD_VERBOSITY: 2
        CIBW_BEFORE_ALL_LINUX: ./before_all_linux.sh
        CIBW_ENVIRONMENT_LINUX: CXXFLAGS=${{ matrix.arch == 'i686' && '"-O0 -g0"' || '"-O3 -g0"' }} CXXQLFLAGS="-O3 -g0"
        CIBW_ENVIRONMENT_PASS_LINUX: CXXFLAGS CXXQLFLAGS
        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_COMMAND: pytest {package}/test
      with:
        package-dir: ./QuantLib-SWIG-1.40/Python
    - name: Save wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-linux-${{ matrix.image }}-${{ matrix.arch }}
        path: ./wheelhouse/*.whl
  test-publish:
    runs-on: ubuntu-latest
    needs: [ wheels-macos, wheels-windows, wheels-linux ]
    environment: testpypi
    permissions:
      id-token: write
    steps:
    - uses: actions/download-artifact@v4
    - name: Collect wheels
      run: |
        mkdir ./wheelhouse
        cp ./wheels-*/*.whl ./wheelhouse
        ls -l ./wheelhouse
    - name: Publish package to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        packages-dir: ./wheelhouse
        skip-existing: true
  publish:
    runs-on: ubuntu-latest
    needs: test-publish
    environment: pypi
    permissions:
      id-token: write
    steps:
    - uses: actions/download-artifact@v4
    - name: Collect wheels
      run: |
        mkdir ./wheelhouse
        cp ./wheels-*/*.whl ./wheelhouse
        ls -l ./wheelhouse
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: ./wheelhouse
        skip-existing: true
